		27/10/2016

- Criada três novas kernels, Exponential, Matern_32 e Matern_52,
ainda não tenho a certeza se funcionam como deve ser.

- Assustei-me ao pesquisar sobre como calcular o gradiente do
log likelihood ao perceber que vai ser preciso derivar as kernels
em ordem aos parametros destas.

		26/10/2016
	
- Problema com soma de kernels resolvido e agora tanto a soma como
multiplicação parecem funcionar visto devolverem valores iguais ao
george.

- A kernel WhiteNoise torna o calculo da log likelihood muito lento
e convém rever e tentar melhorar, mas os valores que dá parecem 
correctos.

- Vou tentar também olhar para umas kernels Matern que o george tem 
e tentar perceber se nos podem ser uteis, caso seja vou cria-las no 
ficheiro Kernel.py

		25/10/2016

- Quantas mais somas e multiplicações se usa no programa que escrevemos
muito lento este se torna quando comparado com o george.

- Ainda não consegui perceber porque é que obtemos valores iguais ao
george quando se usa apenas uma kernel, mas quando se multiplica ou 
soma os valores alteram.

		23/09/2016

- Multiplicação e soma parece "funcionar", devolve valores diferentes 
do george e é necessário ver o porquê ainda!

- A multiplicação mesmo dando valores diferentes que no george acho 
que está bem, a kernel Local_ExpSineSquared = ExpSineSquared*ExpSquared 
logo esta kernel tem de devolver o mesmo valor que o obtido quando se 
multiplica ExpSineSquared*ExpSquared e isso é verificado.

- Criada a kernel WhiteNoise tornando necessário alterar uns pequenos 
pormenores nas outras kernel, foi inserido variaveis "i" e "j" para o 
delta kronecker funcionar  no WhiteNoise, acho que isso nao afecta o 
calculo das outras kernels.

		21/09/2016

- Juntei as kernels e o calculo da likelihood num ficheiro só com o 
nome de "Kernel" depois quando usado num scrip é só fazer 
"import Kernel as kl"  ou algo do genero.

- Converti as kernels todas em classes e creio que agora os calculos 
já funcionam todos sem erros.

- Somar ou multiplicar kernels ainda não consegui, as classes que tentei 
criar para o fazer tambem estão no file "Kernel.py"

- No ficheiro "lihelihood_testes.py" é onde faço os testes a ver se os 
calculos estão certos e comparo-os com os do george.

- No ficheiro "testes.py" está outra tentativa de somar kernels, desta 
vez as kernel são funçoes em vez de classes, tambem nao funciona.

- O ficheiro "Likelihood_MaunaLoa.py" é apenas usado outros dados para 
além dos que está no ficheiro "lihelihood_testes.py". Não é importante 
até ser conseguido somar e multiplicar kernels e mais vale ignorar por 
enquanto.
